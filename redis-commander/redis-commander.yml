apiVersion: v1
kind: Template
metadata:
  name: redis-commander
  annotations:
    openshift.io/display-name: Redis Commander
    description: A management UI for Redis based on http://joeferner.github.io/redis-commander/
    iconClass: icon-redis
    tags: database,administration,redis
message: |-
  Once the application is running, you can view it at https://${ROUTE_PREFIX}.abar.cloud

        Commander HTTP User: admin
    Commander HTTP Password: ${HTTP_PASSWORD}

  For increased security, do not share this URL outside of your team, and scale the deployment to 0 pods when you do not need to access your Redis.
objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${SERVICE_NAME}
      deploymentconfig: ${SERVICE_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${SERVICE_NAME}
          deploymentconfig: ${SERVICE_NAME}
      spec:
        containers:
          - image: "docker-registry.default.svc:5000/<NAMESPACE_HERE>/redis-commander:0.4.5"
            imagePullPolicy: IfNotPresent
            name: ${SERVICE_NAME}
            env:
            - name: REDIS_HOST
              value: ${REDIS_HOST}
            - name: REDIS_PORT
              value: '6379'
            - name: SENTINEL_HOST
              value: ${SENTINEL_HOST}
            - name: SENTINEL_PORT
              value: '26379'
            - name: REDIS_PASSWORD
              value: ${REDIS_PASSWORD}
            - name: REDIS_DB
              value: ${REDIS_DB}
            - name: HTTP_USERNAME
              value: admin
            - name: HTTP_PASSWORD
              value: ${HTTP_PASSWORD}
            ports:
            - containerPort: 8080
              protocol: TCP
            resources:
              limits:
                memory: 100Mi
            terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: "${SERVICE_NAME}"
    name: "${SERVICE_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: "${SERVICE_NAME}"
      deploymentconfig: "${SERVICE_NAME}"
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: "${SERVICE_NAME}"
    name: "${SERVICE_NAME}"
  spec:
    host: ${ROUTE_PREFIX}.abar.cloud
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: "${SERVICE_NAME}"
      weight: 100
    wildcardPolicy: None

parameters:
- name: SERVICE_NAME
  displayName: Service Name
  description: The name used when creating the required deployment config, build config,
    service etc. Must be unique and contain only lower-case letters.
  value: redis-commander
  required: true
- name: REDIS_HOST
  displayName: Redis Host (Single-node)
  description: Internal hostname of Redis service, provide for single-node only.
  value: redis
- name: SENTINEL_HOST
  displayName: Sentinel Host (Replicated)
  description: Internal hostname of Sentinel service (e.g. redis-ha-sentinel), provide for replicated setup. When provided Redis Host provided above will be ignored.
  value: ""
- name: REDIS_PASSWORD
  displayName: Redis Password
  description: Password to connect to the Redis instance.
  required: true
  value: ""
- name: REDIS_DB
  displayName: Database Index
  description: The database to show, default is 0.
  value: "0"
- name: HTTP_PASSWORD
  displayName: Redis Commander Password
  description: This password is used to access Redis-commander web UI. Leave this empty if you'd like it to be auto-generated.
  generate: expression
  from: "[a-z0-9]{24}"
- name: ROUTE_PREFIX
  displayName: Leave this field empty
  description: This is used to auto-generate a unique URL
  generate: expression
  from: "redis-commander-[a-z0-9]{5}"
