apiVersion: v1
kind: Template
metadata:
  name: mysql-non-production
  annotations:
    openshift.io/display-name: MySQL (non-production)
    description: "MySQL v5.6 database service, with persistent storage. For more information
      about using this template see https://docs.openshift.org/latest/using_images/db_images/mysql.html.\n\nNOTE:
      We do not yet recommend using this in production. For production we recommend
      using our managed MySQL which offers a master/slave High-Availability setup
      with scheduled backups. See https://docs.abarcloud.com/additional-services/mysql.html
      for more details. \nScaling to more than one replica is not supported."
    iconClass: icon-mysql-database
    tags: database,mysql
    template.openshift.io/long-description: This template provides a standalone MySQL
      server with a database created.  The database is stored on persistent storage.  The
      database name, username, and password are chosen via parameters when provisioning
      this service.
    template.openshift.io/provider-display-name: Red Hat, Inc. & AbarCloud
    template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/db_images/mysql.html
message: |-
  The following service(s) have been created in your project: ${SERVICE_NAME}.

         Username: ${MYSQL_USER}
         Password: ${MYSQL_PASSWORD}
    Database Name: ${MYSQL_DATABASE}
   Connection URL: mysql://${SERVICE_NAME}:3306/

  For more information about using this template, see https://docs.openshift.org/latest/using_images/db_images/mysql.html.
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: "${SERVICE_NAME}"
  stringData:
    database-user: "${MYSQL_USER}"
    database-password: "${MYSQL_PASSWORD}"
    database-root-password: "${MYSQL_ROOT_PASSWORD}"

- apiVersion: v1
  kind: Service
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    ports:
    - name: mysql
      port: 3306
    selector:
      name: "${SERVICE_NAME}"

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: "${SERVICE_NAME}"
  spec:
    strategy:
      type: Recreate
    replicas: 1
    selector:
      name: "${SERVICE_NAME}"
    template:
      metadata:
        labels:
          name: "${SERVICE_NAME}"
      spec:
        containers:
        - name: mysql
          image: "172.30.150.55:5000/<NAMESPACE_HERE>/mysql:5.6"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3306
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
          env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: "${SERVICE_NAME}"
                key: database-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${SERVICE_NAME}"
                key: database-password
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${SERVICE_NAME}"
                key: database-root-password
          - name: MYSQL_DATABASE
            value: "${MYSQL_DATABASE}"
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: "${SERVICE_NAME}-data"
            mountPath: "/var/lib/mysql/data"
        volumes:
        - name: "${SERVICE_NAME}-data"
          persistentVolumeClaim:
            claimName: "${SERVICE_NAME}"
    triggers:
    - type: ConfigChange

parameters:
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use, e.g. 500Mi, 1000Mi. This
    can be modified later in the DeploymentConfig.
  value: 400Mi
  required: true
- name: SERVICE_NAME
  displayName: Database Service Name
  description: The name used when creating the required deployment config, build config,
    service etc. Must be unique and contain only lower-case letters.
  value: mysql
  required: true
- name: MYSQL_USER
  displayName: MySQL Connection Username
  description: -|
    Username for MySQL user that will be used for accessing the database.
    Leave this empty if you'd like it to be auto-generated. This cannot be
    "root" since this user is already created by the image.
  generate: expression
  from: user[A-Z0-9]{3}
  required: true
- name: MYSQL_PASSWORD
  displayName: MySQL Connection Password
  description: Password for the MySQL connection user. Leave this empty if you'd like
    it to be auto-generated.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: MYSQL_ROOT_PASSWORD
  displayName: MySQL root user Password
  description: Password for the MySQL root user. Leave this empty if you'd like it
    to be auto-generated.
  generate: expression
  from: "[a-zA-Z0-9]{16}"
  required: true
- name: MYSQL_DATABASE
  displayName: MySQL Database Name
  description: Name of the MySQL database accessed.
  value: sampledb
  required: true
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 2Gi, 5Gi.
  value: 1Gi
  required: true
